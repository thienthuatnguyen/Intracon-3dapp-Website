{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n  marginless: PropTypes.bool,\n  paddingless: PropTypes.bool,\n  radiusless: PropTypes.bool,\n  shadowless: PropTypes.bool,\n  unselectable: PropTypes.bool\n}));\nexport const transform = props => {\n  const marginless = props.marginless,\n        paddingless = props.paddingless,\n        radiusless = props.radiusless,\n        shadowless = props.shadowless,\n        unselectable = props.unselectable,\n        rest = tslib_1.__rest(props, [\"marginless\", \"paddingless\", \"radiusless\", \"shadowless\", \"unselectable\"]);\n\n  rest.className = classNames({\n    \"is-marginless\": marginless,\n    \"is-paddingless\": paddingless,\n    \"is-radiusless\": radiusless,\n    \"is-shadowless\": shadowless,\n    \"is-unselectable\": unselectable\n  }, rest.className);\n  return rest;\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"sources":["../../../src/base/helpers/other.ts"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AAEA,SACE,oBADF,EAEE,8BAFF,QAIO,WAJP;AAoBA,OAAO,MAAM,aAAa,GAAG,oBAAoB,CAAC,IAAI,KAAK;AACzD,EAAA,UAAU,EAAE,SAAS,CAAC,IADmC;AAEzD,EAAA,WAAW,EAAE,SAAS,CAAC,IAFkC;AAGzD,EAAA,UAAU,EAAE,SAAS,CAAC,IAHmC;AAIzD,EAAA,UAAU,EAAE,SAAS,CAAC,IAJmC;AAKzD,EAAA,YAAY,EAAE,SAAS,CAAC;AALiC,CAAL,CAAL,CAA1C;AAQP,OAAO,MAAM,SAAS,GAAyC,KAAK,IAAG;AAAA,QAEnE,UAFmE,GAQjE,KARiE,CAEnE,UAFmE;AAAA,QAGnE,WAHmE,GAQjE,KARiE,CAGnE,WAHmE;AAAA,QAInE,UAJmE,GAQjE,KARiE,CAInE,UAJmE;AAAA,QAKnE,UALmE,GAQjE,KARiE,CAKnE,UALmE;AAAA,QAMnE,YANmE,GAQjE,KARiE,CAMnE,YANmE;AAAA,QAOnE,IAPmE,GAOnE,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,YAAA,EAAA,aAAA,EAAA,YAAA,EAAA,YAAA,EAAA,cAAA,CAAA,CAPmE;;AAapE,EAAA,IAAY,CAAC,SAAb,GAAyB,UAAU,CAClC;AACE,qBAAiB,UADnB;AAEE,sBAAkB,WAFpB;AAGE,qBAAiB,UAHnB;AAIE,qBAAiB,UAJnB;AAKE,uBAAmB;AALrB,GADkC,EAQjC,IAAY,CAAC,SARoB,CAAnC;AAWD,SAAO,IAAP;AACD,CAzBM;AA2BP,OAAO,MAAM,uBAAuB,GAAG,8BAA8B,CACnE,aADmE,EAEnE,SAFmE,CAA9D","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory, } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n    marginless: PropTypes.bool,\n    paddingless: PropTypes.bool,\n    radiusless: PropTypes.bool,\n    shadowless: PropTypes.bool,\n    unselectable: PropTypes.bool,\n}));\nexport const transform = props => {\n    const { marginless, paddingless, radiusless, shadowless, unselectable } = props, rest = tslib_1.__rest(props, [\"marginless\", \"paddingless\", \"radiusless\", \"shadowless\", \"unselectable\"]);\n    rest.className = classNames({\n        \"is-marginless\": marginless,\n        \"is-paddingless\": paddingless,\n        \"is-radiusless\": radiusless,\n        \"is-shadowless\": shadowless,\n        \"is-unselectable\": unselectable,\n    }, rest.className);\n    return rest;\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);\n//# sourceMappingURL=other.js.map"]},"metadata":{},"sourceType":"module"}