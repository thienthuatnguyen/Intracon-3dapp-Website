{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Documents/Intracon-3dapp-Website/app/src/pages/calendar.js\";\n\n/* eslint-disable no-loops/no-loops */\n\n/* eslint-disable no-undef */\n\n/* eslint-disable jsx-a11y/aria-role */\nimport styled from 'styled-components';\nimport React, { Component } from 'react';\nimport dateFns from 'date-fns';\nimport icsToJson from 'ics-to-json';\nimport Slider from 'react-slick';\nimport moment from 'moment';\nimport nanoid from 'nanoid';\nimport Document from '../services/document';\nimport SideMenu from '../components/Layout/SideMenu';\nimport BackButton from '../components/Layout/BackButton';\nimport { IconAddress, IconTime } from '../components/Icons';\nimport PopupSeeMoreComponent from '../components/PopupSeeMoreComponent';\nimport BackGroundContent from '../components/UI/BackGroundContent';\nimport '../../../node_modules/slick-carousel/slick/slick.css';\n\nclass Calendar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currentMonth: new Date(),\n      selectedDate: new Date(),\n      data: []\n    });\n\n    _defineProperty(this, \"onDateClick\", day => {\n      this.setState({\n        selectedDate: day\n      });\n    });\n\n    _defineProperty(this, \"nextMonth\", () => {\n      const currentMonth = this.state.currentMonth;\n      this.setState({\n        currentMonth: dateFns.addMonths(currentMonth, 1)\n      });\n    });\n\n    _defineProperty(this, \"prevMonth\", () => {\n      const currentMonth = this.state.currentMonth;\n      this.setState({\n        currentMonth: dateFns.subMonths(currentMonth, 1)\n      });\n    });\n  }\n\n  async componentDidMount() {\n    Document.calendar().then(t => {\n      const json = icsToJson(t.data);\n      const result = [];\n      json.forEach(data => {\n        const startDate = moment(data.startDate, 'YYYYMMDD');\n        const endDate = moment(data.endDate, 'YYYYMMDD');\n        const startMonth = startDate.format('M');\n        const endMonth = endDate.format('M');\n\n        if (startMonth != endMonth) {\n          const copy = _objectSpread({}, data);\n\n          data.endDate = startDate.endOf('month').format('YYYYMMDD');\n          copy.startDate = endDate.startOf('month').format('YYYYMMDD');\n          result.push(copy);\n        }\n\n        result.push(data);\n      });\n      this.setState({\n        data: result\n      });\n    });\n  }\n\n  checkDate(day, monthStart, selectedDate) {\n    if (dateFns.isSameMonth(day, monthStart)) {\n      if (dateFns.isSameDay(day, selectedDate)) {\n        return 'selected';\n      } else {\n        return '';\n      }\n    } else {\n      return 'disabled';\n    }\n  }\n\n  renderDays() {\n    const currentMonth = this.state.currentMonth;\n    const dateFormat = 'dddd';\n    const days = [];\n    let startDate = dateFns.startOfWeek(currentMonth);\n\n    for (let i = 0; i < 7; i++) {\n      days.push(React.createElement(\"div\", {\n        className: \"col col-center\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, dateFns.format(dateFns.addDays(startDate, i), dateFormat)));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"days row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, days);\n  }\n\n  renderEvent(dateCompare, isSameMonth, day) {\n    const data = this.state.data;\n    const settings = {\n      dots: false,\n      fade: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      nextArrow: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, '>'),\n      prevArrow: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, '<')\n    };\n    let events = [];\n    let slider = [];\n    let color = 'pink';\n    let days = 0;\n\n    for (let i = 0; i < data.length; i++) {\n      let endDateCompare = dateFns.getTime(data[i].endDate);\n      let startDateCompare = dateFns.getTime(data[i].startDate);\n      days = dateFns.eachDay(data[i].startDate, data[i].endDate).length;\n\n      if (days > 6) {\n        days = 6;\n      }\n\n      if (startDateCompare <= dateCompare && dateCompare <= endDateCompare) {\n        if (events.length == 0) {\n          color = 'yellow';\n        } else if (events.length == 1) {\n          color = 'green';\n        } else if (events.length == 2) {\n          color = 'pink';\n        }\n\n        if (events.length < 4) {\n          if (dateCompare == startDateCompare || dateFns.isMonday(day)) {\n            events.push(React.createElement(React.Fragment, {\n              key: `${day}${color}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 135\n              },\n              __self: this\n            }, React.createElement(PopupSeeMoreComponent, {\n              index: events.length,\n              allowShowContent: isSameMonth,\n              type: \"detail\",\n              color: color,\n              lenghtDay: days,\n              text: data[i].summary,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136\n              },\n              __self: this\n            }, isSameMonth && React.createElement(ContentDetail, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 146\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"top-content\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 147\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: `date ${color}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 148\n              },\n              __self: this\n            }, data[i].summary), React.createElement(\"div\", {\n              className: \"address\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151\n              },\n              __self: this\n            }, data[i].location), data[i].description && React.createElement(\"div\", {\n              className: \"content-detail\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 156\n              },\n              __self: this\n            }, data[i].description.split('\\\\n').map(item => React.createElement(\"p\", {\n              key: `param_${nanoid()}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157\n              },\n              __self: this\n            }, item))))))));\n          } else {\n            events.push(React.createElement(\"div\", {\n              key: color,\n              value: events.length,\n              className: `empty ${color}`,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 167\n              },\n              __self: this\n            }));\n          }\n        }\n\n        slider.push(React.createElement(\"div\", {\n          className: \"top-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: `date  ${color}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, dateFns.format(day, 'MMMM DD YYYY')), React.createElement(\"div\", {\n          className: \"name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, data[i].summary), React.createElement(\"div\", {\n          className: \"address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, data[i].location), React.createElement(\"div\", {\n          className: \"time\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, `${days} days`), React.createElement(\"div\", {\n          className: \"content-detail\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, data[i].description.split('\\\\n').map((item, i) => React.createElement(\"p\", {\n          key: `param_${nanoid()}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, item)))));\n      }\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, events, slider.length > 0 && events.length > 3 && React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, isSameMonth && React.createElement(PopupSeeMoreComponent, {\n      allowShowContent: true,\n      type: \"seeMore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(ContentDetail, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Slider, _extends({}, settings, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), slider)))));\n  }\n\n  renderHeader() {\n    const dateFormat = 'MMMM YYYY';\n    const onlyDateFormat = 'MMMM';\n    const currentMonth = this.state.currentMonth;\n    return React.createElement(\"div\", {\n      className: \"header row flex-middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col-start\",\n      role: \"button\",\n      tabIndex: 0,\n      onKeyDown: this.prevMonth,\n      onClick: this.prevMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, '<'), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, dateFns.format(dateFns.subMonths(currentMonth, 1), onlyDateFormat))), React.createElement(\"div\", {\n      className: \"col col-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, dateFns.format(currentMonth, dateFormat))), React.createElement(\"div\", {\n      className: \"col col-end\",\n      role: \"button\",\n      tabIndex: 0,\n      onKeyDown: this.nextMonth,\n      onClick: this.nextMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, dateFns.format(dateFns.addMonths(currentMonth, 1), onlyDateFormat)), React.createElement(\"span\", {\n      className: \"arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, '>')));\n  }\n\n  renderCells() {\n    const _this$state = this.state,\n          currentMonth = _this$state.currentMonth,\n          selectedDate = _this$state.selectedDate;\n    const monthStart = dateFns.startOfMonth(currentMonth);\n    const monthEnd = dateFns.endOfMonth(monthStart);\n    const startDate = dateFns.startOfWeek(monthStart);\n    const endDate = dateFns.endOfWeek(monthEnd);\n    const dateFormat = 'D';\n    const rows = [];\n    let days = [];\n    let day = startDate;\n    let formattedDate = '';\n\n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = dateFns.format(day, dateFormat);\n        const cloneDay = day;\n        let dateCompare = dateFns.getTime(dateFns.format(day, 'YYYYMMDD'));\n        days.push(React.createElement(\"div\", {\n          className: `col cell ${this.checkDate(day, monthStart, selectedDate)}`,\n          key: day,\n          tabIndex: 0,\n          role: \"button\",\n          onKeyDown: () => this.onDateClick(dateFns.parse(cloneDay)),\n          onClick: () => this.onDateClick(dateFns.parse(cloneDay)),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"number\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, formattedDate), this.renderEvent(dateCompare, dateFns.isSameMonth(day, monthStart), day)));\n        day = dateFns.addDays(day, 1);\n      }\n\n      rows.push(React.createElement(\"div\", {\n        className: \"row\",\n        key: day,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, days));\n      days = [];\n    }\n\n    return React.createElement(\"div\", {\n      className: \"body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, rows);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(BackButton, {\n      type: \"backHome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(SideMenu, {\n      staticValue: \"calendar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }), React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(WrapperCalendar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, this.renderHeader(), this.renderDays(), this.renderCells())), React.createElement(BackGroundContent, {\n      id: \"bgMainPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst ContentDetail = styled.div.withConfig({\n  displayName: \"calendar__ContentDetail\",\n  componentId: \"sc-1eyz7bj-0\"\n})([\"font-family:\", \";.slick-prev{color:\", \";top:70px;z-index:1000;left:15px;position:absolute;cursor:pointer;width:15px;height:15px;display:flex;text-align:center;font-size:18px;}.slick-next{color:\", \";top:70px;z-index:1000;right:15px;position:absolute;cursor:pointer;width:15px;height:15px;display:flex;text-align:center;font-size:18px;}.top-content{.date{height:50px;display:flex;align-items:center;justify-content:center;box-sizing:border-box;padding-top:10px;&.green{background-color:#21ccd1;}&.yellow{background-color:#fae147;}&.gray{background-color:#c7c7c7;}&.pink{background-color:#f99900;}}.name{border-bottom:1px solid \", \";height:50px;display:flex;align-items:center;justify-content:center;box-sizing:border-box;padding-top:10px;}.address{padding:15px 0 15px 40px;background-image:url(\", \");background-repeat:no-repeat;background-size:15px;background-position:15px center;border-bottom:1px solid \", \";}.time{padding:15px 0 15px 40px;background-image:url(\", \");background-repeat:no-repeat;background-size:15px;background-position:15px center;border-bottom:1px solid \", \";}.content-detail{padding:5px 15px 0 15px;.row-detail{padding:10px 0;flex-direction:column;align-items:flex-start;ul{margin-left:20px;margin-top:5px;li{list-style:disc;}}a{color:\", \";}}}}\"], props => props.theme.bodyFontBold, props => props.theme.colorBlue, props => props.theme.colorBlue, props => props.theme.colorBorder, IconAddress, props => props.theme.colorBorder, IconTime, props => props.theme.colorBorder, props => props.theme.colorBlue);\nconst Content = styled.div.withConfig({\n  displayName: \"calendar__Content\",\n  componentId: \"sc-1eyz7bj-1\"\n})([\"flex:1 1 100%;overflow-y:scroll;\"]);\nconst WrapperCalendar = styled.div.withConfig({\n  displayName: \"calendar__WrapperCalendar\",\n  componentId: \"sc-1eyz7bj-2\"\n})([\"background-color:#f0f0f0;font-size:14px;color:\", \";.header{display:flex;height:50px;align-items:center;border-bottom:1px solid \", \";box-sizing:border-box;font-weight:bold;.col-start,.col-end{flex:1 1 auto;color:\", \";padding:0 15px;cursor:pointer;}.col-start{.arrow{margin-right:5px;}}.col-end{.arrow{margin-left:5px;}}.col-center{flex:1 1 100%;display:flex;justify-content:center;align-items:center;font-family:\", \";}}.days{display:flex;height:60px;border-bottom:1px solid \", \";box-sizing:border-box;.col{flex:1 1 100%;display:flex;justify-content:center;align-items:center;box-sizing:border-box;&:first-child,&:last-child{display:none;}}}.body{.row{display:flex;min-height:150px;border-bottom:1px solid \", \";box-sizing:border-box;.col{flex:1 1 100%;display:flex;align-items:center;box-sizing:border-box;border-right:1px solid \", \";position:relative;flex-direction:column;justify-content:flex-start;padding:35px 10px 0 10px;width:20%;min-width:20%;&:first-child,&:last-child{display:none;}&.disabled{.number{opacity:0.4;}}&:nth-of-type(2){.content.detail{left:0 !important;margin-left:0 !important;}}&:nth-of-type(6){.content.detail{left:auto !important;right:0;margin-left:0 !important;}.content{right:auto;left:0;margin-left:-450px !important;}.add-new{&::after{left:-40px;transform:rotate(180deg);}}}&:nth-of-type(5){.content{right:auto;left:0;margin-left:-450px !important;}.add-new{&::after{left:-40px;transform:rotate(180deg);}}.content.detail{left:50% !important;margin-left:-200px !important;}}.empty{height:30px;width:100%;margin-bottom:3px;}.event{width:auto;min-width:100%;height:30px;min-height:30px;box-sizing:border-box;font-size:14px;white-space:nowrap;cursor:pointer;position:absolute;outline:none !important;box-shadow:none !important;padding-left:15px;left:0;top:0;display:block;line-height:30px;z-index:100;&.length1{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}&.length2{width:calc(200% + 22px);}&.length3{width:calc(300% + 42px);}&.length4{width:calc(400% + 62px);}&.length5{width:calc(500% + 82px);}&.length6{width:calc(500% + 82px);}&.length7{width:calc(500% + 82px);}&.green{background-color:#21ccd1;.content-text{background-color:#21ccd1;}}&.yellow{background-color:#fae147;.content-text{background-color:#fae147;}}&.gray{background-color:#c7c7c7;.content-text{background-color:#c7c7c7;}}&.pink{background-color:#f99900;.content-text{background-color:#f99900;}}&.event-array{background-color:transparent;position:relative;.content-text{position:absolute;width:300%;left:0;top:0;height:30px;display:flex;align-items:center;z-index:1;padding:5px 10px;max-height:30px;box-sizing:border-box;}}}.number{font-family:\", \";position:absolute;left:5px;top:5px;font-size:14px;background-color:transparent;}}}}\"], props => props.theme.colorTextBody, props => props.theme.colorBorder, props => props.theme.colorBlue, props => props.theme.bodyFontBold, props => props.theme.colorBorder, props => props.theme.colorBorder, props => props.theme.colorBorder, props => props.theme.bodyFontBold);\nexport default Calendar;","map":{"version":3,"sources":["/Users/mac/Documents/Intracon-3dapp-Website/app/src/pages/calendar.js"],"names":["styled","React","Component","dateFns","icsToJson","Slider","moment","nanoid","Document","SideMenu","BackButton","IconAddress","IconTime","PopupSeeMoreComponent","BackGroundContent","Calendar","currentMonth","Date","selectedDate","data","day","setState","state","addMonths","subMonths","componentDidMount","calendar","then","t","json","result","forEach","startDate","endDate","startMonth","format","endMonth","copy","endOf","startOf","push","checkDate","monthStart","isSameMonth","isSameDay","renderDays","dateFormat","days","startOfWeek","i","addDays","renderEvent","dateCompare","settings","dots","fade","infinite","speed","slidesToShow","slidesToScroll","nextArrow","prevArrow","events","slider","color","length","endDateCompare","getTime","startDateCompare","eachDay","isMonday","summary","location","description","split","map","item","renderHeader","onlyDateFormat","prevMonth","nextMonth","renderCells","startOfMonth","monthEnd","endOfMonth","endOfWeek","rows","formattedDate","cloneDay","onDateClick","parse","render","ContentDetail","div","props","theme","bodyFontBold","colorBlue","colorBorder","Content","WrapperCalendar","colorTextBody"],"mappings":"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","sourcesContent":["/* eslint-disable no-loops/no-loops */\n/* eslint-disable no-undef */\n/* eslint-disable jsx-a11y/aria-role */\nimport styled from 'styled-components'\nimport React, { Component } from 'react'\nimport dateFns from 'date-fns'\nimport icsToJson from 'ics-to-json'\nimport Slider from 'react-slick'\nimport moment from 'moment'\nimport nanoid from 'nanoid'\nimport Document from '../services/document'\nimport SideMenu from '../components/Layout/SideMenu'\nimport BackButton from '../components/Layout/BackButton'\nimport { IconAddress, IconTime } from '../components/Icons'\nimport PopupSeeMoreComponent from '../components/PopupSeeMoreComponent'\nimport BackGroundContent from '../components/UI/BackGroundContent'\nimport '../../../node_modules/slick-carousel/slick/slick.css'\n\nclass Calendar extends Component {\n  state = {\n    currentMonth: new Date(),\n    selectedDate: new Date(),\n    data: []\n  }\n\n  async componentDidMount() {\n    Document.calendar().then(t => {\n      const json = icsToJson(t.data)\n      const result = []\n      json.forEach(data => {\n        const startDate = moment(data.startDate, 'YYYYMMDD')\n        const endDate = moment(data.endDate, 'YYYYMMDD')\n        const startMonth = startDate.format('M')\n        const endMonth = endDate.format('M')\n        if (startMonth != endMonth) {\n          const copy = { ...data }\n          data.endDate = startDate.endOf('month').format('YYYYMMDD')\n          copy.startDate = endDate.startOf('month').format('YYYYMMDD')\n          result.push(copy)\n        }\n        result.push(data)\n      })\n      this.setState({\n        data: result\n      })\n    })\n  }\n\n  onDateClick = day => {\n    this.setState({ selectedDate: day })\n  }\n\n  nextMonth = () => {\n    const { currentMonth } = this.state\n    this.setState({\n      currentMonth: dateFns.addMonths(currentMonth, 1)\n    })\n  }\n\n  prevMonth = () => {\n    const { currentMonth } = this.state\n    this.setState({\n      currentMonth: dateFns.subMonths(currentMonth, 1)\n    })\n  }\n\n  checkDate(day, monthStart, selectedDate) {\n    if (dateFns.isSameMonth(day, monthStart)) {\n      if (dateFns.isSameDay(day, selectedDate)) {\n        return 'selected'\n      } else {\n        return ''\n      }\n    } else {\n      return 'disabled'\n    }\n  }\n\n  renderDays() {\n    const { currentMonth } = this.state\n    const dateFormat = 'dddd'\n    const days = []\n\n    let startDate = dateFns.startOfWeek(currentMonth)\n\n    for (let i = 0; i < 7; i++) {\n      days.push(\n        <div className='col col-center' key={i}>\n          {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\n        </div>\n      )\n    }\n\n    return <div className='days row'>{days}</div>\n  }\n\n  renderEvent(dateCompare, isSameMonth, day) {\n    const { data } = this.state\n    const settings = {\n      dots: false,\n      fade: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      nextArrow: <span>{'>'}</span>,\n      prevArrow: <span>{'<'}</span>\n    }\n    \n    let events = []\n    let slider = []\n    let color = 'pink'\n    let days = 0\n    for (let i = 0; i < data.length; i++) {\n\n      let endDateCompare = dateFns.getTime(data[i].endDate)\n      let startDateCompare = dateFns.getTime(data[i].startDate)\n      days = dateFns.eachDay(data[i].startDate,data[i].endDate).length  \n      if (days > 6) {\n        days = 6\n      }\n            \n      if ((startDateCompare <= dateCompare) && (dateCompare <= endDateCompare)) {\n        if (events.length  == 0) {\n          color = 'yellow'\n        } else if (events.length  == 1) {\n          color = 'green'\n        } else if (events.length == 2) {\n          color = 'pink'\n        }\n\n        if (events.length < 4) {          \n          if (dateCompare == startDateCompare || dateFns.isMonday(day)) {      \n            events.push(\n              <React.Fragment key={`${day}${color}`}>\n                <PopupSeeMoreComponent\n                  index={events.length}\n                  allowShowContent={isSameMonth}\n                  type='detail'\n                  color={color}\n                  lenghtDay={days}\n                  text={data[i].summary}\n                >\n                  {\n                    isSameMonth && (\n                    <ContentDetail>\n                      <div className='top-content'>\n                        <div className={`date ${color}`}>\n                          { data[i].summary }\n                        </div>\n                        <div className='address'>\n                          { data[i].location }\n                        </div>\n                        {\n                          data[i].description && (\n                          <div className='content-detail'>\n                            { data[i].description.split('\\\\n').map( item => <p key={`param_${nanoid()}`}>{item}</p>) }\n                          </div>\n)}\n                      </div>\n                    </ContentDetail>\n)}\n                </PopupSeeMoreComponent>\n              </React.Fragment>\n            )\n          } else {\n            events.push(<div key={color} value={events.length} className={`empty ${color}`} />)\n          }\n        }\n\n        slider.push(\n          <div className='top-content'>\n            <div className={`date  ${color}`}>\n              {dateFns.format(day, 'MMMM DD YYYY')}\n            </div>\n            <div className='name'>\n              {data[i].summary}\n            </div>\n            <div className='address'>\n              {data[i].location}\n            </div>\n            <div className='time'>\n              {`${days} days`}\n            </div>\n            <div className='content-detail'>\n              {data[i].description.split ('\\\\n').map((item, i) => <p key={`param_${nanoid()}`}>{item}</p>)}\n            </div>\n          </div>\n        )\n      }\n    }\n\n    return (\n      <React.Fragment>\n        {events}\n        {\n          slider.length > 0 && events.length > 3 && (\n          <React.Fragment>\n            {\n              isSameMonth && (\n              <PopupSeeMoreComponent allowShowContent type='seeMore'>\n                <ContentDetail>\n                  <Slider {...settings}>\n                    {slider}\n                  </Slider>\n                </ContentDetail>\n              </PopupSeeMoreComponent>\n)}\n          </React.Fragment>\n)}\n      </React.Fragment>\n    )\n  }\n\n  renderHeader() {\n    const dateFormat = 'MMMM YYYY'\n    const onlyDateFormat = 'MMMM'\n    const { currentMonth } = this.state\n    return (\n      <div className='header row flex-middle'>\n        <div\n          className='col col-start'\n          role='button'\n          tabIndex={0}\n          onKeyDown={this.prevMonth}\n          onClick={this.prevMonth}\n        >\n          <span className='arrow'>{'<'}</span>\n          <span>{dateFns.format(dateFns.subMonths(currentMonth, 1), onlyDateFormat)}</span>\n        </div>\n        <div className='col col-center'>\n          <span>{dateFns.format(currentMonth, dateFormat)}</span>\n        </div>\n        <div\n          className='col col-end'\n          role='button'\n          tabIndex={0}\n          onKeyDown={this.nextMonth}\n          onClick={this.nextMonth}\n        >\n          <span>{dateFns.format(dateFns.addMonths(currentMonth, 1), onlyDateFormat)}</span>\n          <span className='arrow'>{'>'}</span>\n        </div>\n      </div>\n    )\n  }\n\n  renderCells() {\n    const { currentMonth, selectedDate } = this.state       \n    const monthStart = dateFns.startOfMonth(currentMonth)\n    const monthEnd = dateFns.endOfMonth(monthStart)\n    const startDate = dateFns.startOfWeek(monthStart)\n    const endDate = dateFns.endOfWeek(monthEnd)\n    const dateFormat = 'D'\n    const rows = []\n    let days = []\n    let day = startDate\n    let formattedDate = ''\n    \n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        formattedDate = dateFns.format(day, dateFormat)\n        const cloneDay = day\n        let dateCompare = dateFns.getTime(dateFns.format(day, 'YYYYMMDD'))\n        days.push(\n          <div\n            className={`col cell ${this.checkDate(day, monthStart, selectedDate)}`}\n            key={day}\n            tabIndex={0}\n            role='button'\n            onKeyDown={() => this.onDateClick(dateFns.parse(cloneDay))}\n            onClick={() => this.onDateClick(dateFns.parse(cloneDay))}\n          >\n            <span className='number'>{formattedDate}</span>\n            { this.renderEvent(dateCompare, dateFns.isSameMonth(day, monthStart), day) }\n          </div>\n        )\n        day = dateFns.addDays(day, 1)\n      }\n      rows.push(<div className='row' key={day}>{days}</div>)\n      days = []\n    }\n    \n    return <div className='body'>{rows}</div>\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <BackButton type='backHome' />\n        <SideMenu staticValue='calendar' />\n        <Content>\n          <WrapperCalendar>\n            {this.renderHeader()}\n            {this.renderDays()}\n            {this.renderCells()}\n          </WrapperCalendar>\n        </Content>\n        <BackGroundContent id='bgMainPage' />\n      </React.Fragment>\n    )\n  }\n}\n\nconst ContentDetail = styled.div`\n  font-family: ${props => props.theme.bodyFontBold};\n\n  .slick-prev {\n    color: ${props => props.theme.colorBlue};\n    top: 70px;\n    z-index: 1000;\n    left: 15px;\n    position: absolute;\n    cursor: pointer;\n    width: 15px;\n    height: 15px;\n    display: flex;\n    text-align: center;\n    font-size: 18px;\n  }\n\n  .slick-next {\n    color: ${props => props.theme.colorBlue};\n    top: 70px;\n    z-index: 1000;\n    right: 15px;\n    position: absolute;\n    cursor: pointer;\n    width: 15px;\n    height: 15px;\n    display: flex;\n    text-align: center;\n    font-size: 18px;\n  }\n\n  .top-content {\n    .date {\n      height: 50px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      box-sizing: border-box;\n      padding-top: 10px;\n\n      &.green {\n        background-color: #21ccd1;\n      }\n\n      &.yellow {\n        background-color: #fae147;\n      }\n\n      &.gray {\n        background-color: #c7c7c7;\n      }\n\n      &.pink {\n        background-color: #f99900;\n      }\n    }\n\n    .name {\n      border-bottom: 1px solid ${props => props.theme.colorBorder};\n      height: 50px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      box-sizing: border-box;\n      padding-top: 10px;\n    }\n\n    .address {\n      padding: 15px 0 15px 40px;\n      background-image: url(${IconAddress});\n      background-repeat: no-repeat;\n      background-size: 15px;\n      background-position: 15px center;\n      border-bottom: 1px solid ${props => props.theme.colorBorder};\n    }\n\n    .time {\n      padding: 15px 0 15px 40px;\n      background-image: url(${IconTime});\n      background-repeat: no-repeat;\n      background-size: 15px;\n      background-position: 15px center;\n      border-bottom: 1px solid ${props => props.theme.colorBorder};\n    }\n\n    .content-detail {\n      padding: 5px 15px 0 15px;\n\n      .row-detail {\n        padding: 10px 0;\n        flex-direction: column;\n        align-items: flex-start;\n\n        ul {\n          margin-left: 20px;\n          margin-top: 5px;\n\n          li {\n            list-style: disc;\n          }\n        }\n\n        a {\n          color: ${props => props.theme.colorBlue};\n        }\n      }\n    }\n  }\n`\n\nconst Content = styled.div`\n  flex: 1 1 100%;\n  overflow-y: scroll;\n`\n\nconst WrapperCalendar = styled.div`\n  background-color: #f0f0f0;\n  font-size: 14px;\n  color: ${props => props.theme.colorTextBody};\n\n  .header {\n    display: flex;\n    height: 50px;\n    align-items: center;\n    border-bottom: 1px solid ${props => props.theme.colorBorder};\n    box-sizing: border-box;\n    font-weight: bold;\n\n    .col-start,\n    .col-end {\n      flex: 1 1 auto;\n      color: ${props => props.theme.colorBlue};\n      padding: 0 15px;\n      cursor: pointer;\n    }\n\n    .col-start {\n      .arrow {\n        margin-right: 5px;\n      }\n    }\n\n    .col-end {\n      .arrow {\n        margin-left: 5px;\n      }\n    }\n\n    .col-center {\n      flex: 1 1 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      font-family: ${props => props.theme.bodyFontBold};\n    }\n  }\n\n  .days {\n    display: flex;\n    height: 60px;\n    border-bottom: 1px solid ${props => props.theme.colorBorder};\n    box-sizing: border-box;\n\n    .col {\n      flex: 1 1 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      box-sizing: border-box;\n\n      &:first-child,\n      &:last-child {\n        display: none;\n      }\n    }\n  }\n\n  .body {\n    .row {\n      display: flex;\n      min-height: 150px;\n      border-bottom: 1px solid ${props => props.theme.colorBorder};\n      box-sizing: border-box;\n\n      .col {\n        flex: 1 1 100%;\n        display: flex;\n        align-items: center;\n        box-sizing: border-box;\n        border-right: 1px solid ${props => props.theme.colorBorder};\n        position: relative;\n        flex-direction: column;\n        justify-content: flex-start;\n        padding: 35px 10px 0 10px;\n        width: 20%;\n        min-width: 20%;\n\n        &:first-child,\n        &:last-child {\n          display: none;\n        }\n\n        &.disabled {\n          .number {\n            opacity: 0.4;\n          }\n        }\n\n        &:nth-of-type(2) {\n          .content.detail {\n            left: 0 !important;\n            margin-left: 0 !important;\n          }\n        }\n\n        &:nth-of-type(6) {\n          .content.detail {\n            left: auto !important;\n            right: 0;\n            margin-left: 0 !important;\n          }\n\n          .content {\n            right: auto;\n            left: 0;\n            margin-left: -450px !important;\n          }\n\n          .add-new {\n            &::after {\n              left: -40px;\n              transform: rotate(180deg);\n            }\n          }\n        }\n\n        &:nth-of-type(5) {\n          .content {\n            right: auto;\n            left: 0;\n            margin-left: -450px !important;\n          }\n\n          .add-new {\n            &::after {\n              left: -40px;\n              transform: rotate(180deg);\n            }\n          }\n\n          .content.detail {\n            left: 50% !important;\n            margin-left: -200px !important;\n          }\n        }\n\n        .empty {\n          height: 30px;\n          width: 100%;\n          margin-bottom: 3px;\n        }\n\n        .event {\n          width: auto;\n          min-width: 100%;\n          height: 30px;\n          min-height: 30px;\n          box-sizing: border-box;\n          font-size: 14px;\n          white-space: nowrap;\n          cursor: pointer;\n          position: absolute;\n          outline: none !important;\n          box-shadow: none !important;\n          padding-left: 15px;\n          left: 0;\n          top: 0;\n          display: block;\n          line-height: 30px;\n          z-index: 100;\n\n          &.length1 {\n            width: 100%;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n          }\n\n          &.length2 {\n            width: calc(200% + 22px);\n          }\n\n          &.length3 {\n            width: calc(300% + 42px);\n          }\n\n          &.length4 {\n            width: calc(400% + 62px);\n          }\n\n          &.length5 {\n            width: calc(500% + 82px);\n          }\n\n          &.length6 {\n            width: calc(500% + 82px);\n          }\n\n          &.length7 {\n            width: calc(500% + 82px);\n          }\n\n          &.green {\n            background-color: #21ccd1;\n\n            .content-text {\n              background-color: #21ccd1;\n            }\n          }\n\n          &.yellow {\n            background-color: #fae147;\n\n            .content-text {\n              background-color: #fae147;\n            }\n          }\n\n          &.gray {\n            background-color: #c7c7c7;\n\n            .content-text {\n              background-color: #c7c7c7;\n            }\n          }\n\n          &.pink {\n            background-color: #f99900;\n\n            .content-text {\n              background-color: #f99900;\n            }\n          }\n\n          &.event-array {\n            background-color: transparent;\n            position: relative;\n\n            .content-text {\n              position: absolute;\n              width: 300%;\n              left: 0;\n              top: 0;\n              height: 30px;\n              display: flex;\n              align-items: center;\n              z-index: 1;\n              padding: 5px 10px;\n              max-height: 30px;\n              box-sizing: border-box;\n            }\n          }\n        }\n\n        .number {\n          font-family: ${props => props.theme.bodyFontBold};\n          position: absolute;\n          left: 5px;\n          top: 5px;\n          font-size: 14px;\n          background-color: transparent;\n        }\n      }\n    }\n  }\n`\nexport default Calendar\n"]},"metadata":{},"sourceType":"module"}