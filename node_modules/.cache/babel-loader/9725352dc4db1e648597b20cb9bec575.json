{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Documents/Intracon-3dapp-Website/app/src/components/PopupChangeLanguage.js\";\n\n/* eslint-disable react/forbid-prop-types */\n\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport styled from 'styled-components';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FlagDocument from './FlagDocument';\nimport { IconLang } from './Icons';\n\nclass PopupChangeLanguage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showDropDown: false\n    });\n\n    _defineProperty(this, \"showDropDownUserGroup\", () => {\n      const showDropDown = this.state.showDropDown;\n      this.setState({\n        showDropDown: !showDropDown\n      });\n    });\n\n    _defineProperty(this, \"handleClickOutside\", event => {\n      if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n        this.setState({\n          showDropDown: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"setWrapperRef\", node => {\n      this.wrapperRef = node;\n    });\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  render() {\n    const children = this.props.children;\n    const showDropDown = this.state.showDropDown;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Language, {\n      ref: this.setWrapperRef,\n      className: showDropDown ? 'showDropdown' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon\",\n      onClick: () => {\n        this.showDropDownUserGroup();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(IconLang, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(Wrapper, {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row-country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(FlagDocument, {\n      lang: 'en',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"English\")), React.createElement(\"div\", {\n      className: \"row-country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(FlagDocument, {\n      lang: 'es',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Spanish\")), React.createElement(\"div\", {\n      className: \"row-country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(FlagDocument, {\n      lang: 'gr',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"English\")), React.createElement(\"div\", {\n      className: \"row-country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(FlagDocument, {\n      lang: 'cn',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"English\")), React.createElement(\"div\", {\n      className: \"row-country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(FlagDocument, {\n      lang: 'fr',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"English\")), React.createElement(\"div\", {\n      className: \"row-country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(FlagDocument, {\n      lang: 'kr',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"English\")), React.createElement(\"div\", {\n      className: \"row-country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"icon-flag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(FlagDocument, {\n      lang: 'jp',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"English\")))));\n  }\n\n}\n\nPopupChangeLanguage.propTypes = {};\nconst Language = styled.div.withConfig({\n  displayName: \"PopupChangeLanguage__Language\",\n  componentId: \"mx3mng-0\"\n})([\"flex:1 1 auto;height:60px;display:flex;flex-direction:column;width:40px;max-width:40px;min-width:40px;justify-content:flex-start;align-items:flex-start;padding-top:12px;box-sizing:border-box;img{cursor:pointer;width:16px;object-fit:contain;}&.showDropdown{.wrapper{width:150px;opacity:1;border:1px solid \", \";}}\"], props => props.theme.colorBlue);\nconst Wrapper = styled.div.withConfig({\n  displayName: \"PopupChangeLanguage__Wrapper\",\n  componentId: \"mx3mng-1\"\n})([\"position:absolute;right:-165px;width:150px;z-index:1000;background-color:\", \";top:-1px;box-sizing:border-box;width:0;opacity:0;.row-country{border-bottom:1px solid \", \";height:60px;box-sizing:border-box;display:flex;align-items:center;padding-left:8px;&:first-child{position:relative;&::after,&::before{right:100%;top:50%;border:solid transparent;content:\\\" \\\";height:0;width:0;position:absolute;pointer-events:none;}&::after{border-right-color:\", \";border-width:10px;margin-top:-10px;}&::before{border-right-color:\", \";border-width:11px;margin-top:-11px;}}.icon-flag{width:60px;flex:1 1 auto;}svg{width:40px;}&:last-child{border-bottom:1px solid transparent;}.name{flex:1 1 100%;font-family:\", \";color:\", \";}}\"], props => props.theme.colorContent, props => props.theme.colorBlue, props => props.theme.colorContent, props => props.theme.colorBlue, props => props.theme.bodyFont, props => props.theme.colorTextBody);\nexport default PopupChangeLanguage;","map":{"version":3,"sources":["/Users/mac/Documents/Intracon-3dapp-Website/app/src/components/PopupChangeLanguage.js"],"names":["styled","React","Component","PropTypes","FlagDocument","IconLang","PopupChangeLanguage","showDropDown","state","setState","event","wrapperRef","contains","target","node","componentDidMount","document","addEventListener","handleClickOutside","componentWillUnmount","removeEventListener","render","children","props","setWrapperRef","showDropDownUserGroup","propTypes","Language","div","theme","colorBlue","Wrapper","colorContent","bodyFont","colorTextBody"],"mappings":"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","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport styled from 'styled-components'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport FlagDocument from './FlagDocument'\nimport { IconLang } from './Icons'\n\nclass PopupChangeLanguage extends Component {\n\n  state = {\n    showDropDown: false\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside)\n  }\n\n  showDropDownUserGroup = () => {\n    const { showDropDown } = this.state\n    this.setState({\n      showDropDown: !showDropDown\n    })\n  }\n\n  handleClickOutside = event => {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.setState({\n        showDropDown: false\n      })\n    }\n  }\n\n  setWrapperRef = node => {\n    this.wrapperRef = node\n  }\n\n\n  \n\n  render() {\n    const { children } = this.props\n    const { showDropDown } = this.state\n    return (\n      <React.Fragment>\n      <Language ref={this.setWrapperRef} className = {showDropDown? 'showDropdown': ''}>\n        <div className=\"icon\" onClick= {()=> { this.showDropDownUserGroup()}}>\n          <IconLang />\n        </div> \n        <Wrapper className=\"wrapper\">\n        <div className=\"row-country\">\n          <div className=\"icon-flag\">\n            <FlagDocument lang={'en'} />\n          </div>\n          <div className=\"name\">English</div>\n        </div>\n        <div className=\"row-country\">\n          <div className=\"icon-flag\">\n            <FlagDocument lang={'es'} />\n          </div>\n          <div className=\"name\">Spanish</div>\n        </div>\n        <div className=\"row-country\">\n          <div className=\"icon-flag\">\n            <FlagDocument lang={'gr'} />\n          </div>\n          <div className=\"name\">English</div>\n        </div>\n        <div className=\"row-country\">\n          <div className=\"icon-flag\">\n            <FlagDocument lang={'cn'} />\n          </div>\n          <div className=\"name\">English</div>\n        </div>\n        <div className=\"row-country\">\n          <div className=\"icon-flag\">\n            <FlagDocument lang={'fr'} />\n          </div>\n          <div className=\"name\">English</div>\n        </div>\n        <div className=\"row-country\">\n          <div className=\"icon-flag\">\n            <FlagDocument lang={'kr'} />\n          </div>\n          <div className=\"name\">English</div>\n        </div>\n        <div className=\"row-country\">\n          <div className=\"icon-flag\">\n            <FlagDocument lang={'jp'} />\n          </div>\n          <div className=\"name\">English</div>\n        </div>\n     </Wrapper>\n     \n      </Language>\n     \n     </React.Fragment>\n\n    )\n  }\n}\n\nPopupChangeLanguage.propTypes = {\n \n}\nconst Language = styled.div`\n  flex: 1 1 auto;\n  height: 60px;\n  display: flex;\n  flex-direction: column;\n  width: 40px;\n  max-width: 40px;\n  min-width: 40px;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding-top: 12px;\n  box-sizing: border-box;\n\n  img {\n    cursor: pointer;\n    width: 16px;\n    object-fit: contain;\n  }\n  &.showDropdown {\n    .wrapper {\n      width: 150px;\n      opacity: 1;\n      border: 1px solid ${props => props.theme.colorBlue};\n    }\n  }\n`\nconst Wrapper = styled.div`\n  position: absolute;\n  right: -165px;\n  width: 150px;\n  z-index: 1000;\n  background-color: ${props => props.theme.colorContent};\n  top: -1px;\n  box-sizing: border-box;\n  width: 0;\n  opacity: 0;\n  .row-country {\n    border-bottom: 1px solid ${props => props.theme.colorBlue};\n    height: 60px;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    padding-left: 8px;\n    &:first-child {\n      position: relative;\n      &::after,\n      &::before {\n        right: 100%;\n\t      top: 50%;\n        border: solid transparent;\n        content: \" \";\n        height: 0;\n        width: 0;\n        position: absolute;\n        pointer-events: none;\n      }\n\n      &::after {\n        border-right-color: ${props => props.theme.colorContent};\n        border-width: 10px;\n        margin-top: -10px;\n      }\n\n      &::before {\n        border-right-color: ${props => props.theme.colorBlue};\n        border-width: 11px;\n        margin-top: -11px;\n      }\n    }\n    .icon-flag {\n      width: 60px;\n      flex: 1 1 auto;\n    }\n    svg {\n      width: 40px;\n    }\n    &:last-child {\n      border-bottom: 1px solid transparent;\n    }\n    .name {\n      flex: 1 1 100%;\n      font-family: ${props => props.theme.bodyFont};\n      color: ${props => props.theme.colorTextBody};\n    }\n  }\n`\n\nexport default PopupChangeLanguage\n"]},"metadata":{},"sourceType":"module"}