{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { tuple } from \"../../utils\";\nexport const TITLE_DEFAULTS = {\n  sizes: tuple(1, 2, 3, 4, 5, 6)\n};\nexport const Title = forwardRefAs((_a, ref) => {\n  var className = _a.className,\n      size = _a.size,\n      spaced = _a.spaced,\n      subtitle = _a.subtitle,\n      rest = tslib_1.__rest(_a, [\"className\", \"size\", \"spaced\", \"subtitle\"]);\n\n  return React.createElement(Generic, _Object$assign({\n    className: classNames({\n      [`is-${size}`]: size !== undefined,\n      \"is-spaced\": spaced === true && subtitle !== true,\n      subtitle,\n      title: subtitle !== true\n    }, className),\n    ref: ref\n  }, rest));\n}, {\n  as: \"h1\"\n});\nTitle.displayName = \"Title\";\nTitle.propTypes = {\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  spaced: PropTypes.bool,\n  subtitle: PropTypes.bool\n};","map":{"version":3,"sources":["../../../src/elements/title/title.tsx"],"names":[],"mappings":";;AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,YAAT,EAAuB,OAAvB,QAAsC,YAAtC;AAGA,SAAS,KAAT,QAAsB,aAAtB;AAEA,OAAO,MAAM,cAAc,GAAG;AAC5B,EAAA,KAAK,EAAE,KAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB;AADgB,CAAvB;AAuBP,OAAO,MAAM,KAAK,GAAG,YAAY,CAC/B,CAAC,EAAD,EAAiD,GAAjD,KAAwD;AAAA,MAArD,SAAqD,GAApB,EAAoB,CAArD,SAAqD;AAAA,MAA1C,IAA0C,GAApB,EAAoB,CAA1C,IAA0C;AAAA,MAApC,MAAoC,GAApB,EAAoB,CAApC,MAAoC;AAAA,MAA5B,QAA4B,GAApB,EAAoB,CAA5B,QAA4B;AAAA,MAAlB,IAAkB,GAAlB,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,WAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,CAAA,CAAkB;;AAAC,SACvD,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ,eAAA;AACN,IAAA,SAAS,EAAE,UAAU,CACnB;AACE,OAAC,MAAM,IAAI,EAAX,GAAgB,IAAI,KAAK,SAD3B;AAEE,mBAAa,MAAM,KAAK,IAAX,IAAmB,QAAQ,KAAK,IAF/C;AAGE,MAAA,QAHF;AAIE,MAAA,KAAK,EAAE,QAAQ,KAAK;AAJtB,KADmB,EAOnB,SAPmB,CADf;AAUN,IAAA,GAAG,EAAE;AAVC,GAAA,EAWF,IAXE,CAAR,CADuD;AAcxD,CAf8B,EAgB/B;AAAE,EAAA,EAAE,EAAE;AAAN,CAhB+B,CAA1B;AAmBP,KAAK,CAAC,WAAN,GAAoB,OAApB;AACA,KAAK,CAAC,SAAN,GAAkB;AAChB,EAAA,IAAI,EAAE,SAAS,CAAC,SAAV,CAAoB,CAAC,SAAS,CAAC,MAAX,EAAmB,SAAS,CAAC,MAA7B,CAApB,CADU;AAEhB,EAAA,MAAM,EAAE,SAAS,CAAC,IAFF;AAGhB,EAAA,QAAQ,EAAE,SAAS,CAAC;AAHJ,CAAlB","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { forwardRefAs, Generic } from \"../../base\";\nimport { tuple } from \"../../utils\";\nexport const TITLE_DEFAULTS = {\n    sizes: tuple(1, 2, 3, 4, 5, 6),\n};\nexport const Title = forwardRefAs((_a, ref) => {\n    var { className, size, spaced, subtitle } = _a, rest = tslib_1.__rest(_a, [\"className\", \"size\", \"spaced\", \"subtitle\"]);\n    return (React.createElement(Generic, Object.assign({ className: classNames({\n            [`is-${size}`]: size !== undefined,\n            \"is-spaced\": spaced === true && subtitle !== true,\n            subtitle,\n            title: subtitle !== true,\n        }, className), ref: ref }, rest)));\n}, { as: \"h1\" });\nTitle.displayName = \"Title\";\nTitle.propTypes = {\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    spaced: PropTypes.bool,\n    subtitle: PropTypes.bool,\n};\n//# sourceMappingURL=title.js.map"]},"metadata":{},"sourceType":"module"}