{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n  clearfix: PropTypes.bool,\n  pull: PropTypes.oneOf(vars.floatPulledAlignments)\n}));\nexport const transform = props => {\n  const clearfix = props.clearfix,\n        pull = props.pull,\n        rest = tslib_1.__rest(props, [\"clearfix\", \"pull\"]);\n\n  rest.className = classNames({\n    \"is-clearfix\": clearfix,\n    [`is-pulled-${pull}`]: pull\n  }, rest.className);\n  return rest;\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"sources":["../../../src/base/helpers/float.ts"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AAEA,SACE,oBADF,EAEE,8BAFF,QAIO,WAJP;AAeA,OAAO,MAAM,aAAa,GAAG,oBAAoB,CAAC,IAAI,KAAK;AACzD,EAAA,QAAQ,EAAE,SAAS,CAAC,IADqC;AAEzD,EAAA,IAAI,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,qBAArB;AAFmD,CAAL,CAAL,CAA1C;AAKP,OAAO,MAAM,SAAS,GAAyC,KAAK,IAAG;AAAA,QAC7D,QAD6D,GACjC,KADiC,CAC7D,QAD6D;AAAA,QACnD,IADmD,GACjC,KADiC,CACnD,IADmD;AAAA,QAC7C,IAD6C,GAC7C,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,UAAA,EAAA,MAAA,CAAA,CAD6C;;AAOpE,EAAA,IAAY,CAAC,SAAb,GAAyB,UAAU,CAClC;AACE,mBAAe,QADjB;AAEE,KAAC,aAAa,IAAI,EAAlB,GAAuB;AAFzB,GADkC,EAKjC,IAAY,CAAC,SALoB,CAAnC;AAQD,SAAO,IAAP;AACD,CAhBM;AAkBP,OAAO,MAAM,uBAAuB,GAAG,8BAA8B,CACnE,aADmE,EAEnE,SAFmE,CAA9D","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory, } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n    clearfix: PropTypes.bool,\n    pull: PropTypes.oneOf(vars.floatPulledAlignments),\n}));\nexport const transform = props => {\n    const { clearfix, pull } = props, rest = tslib_1.__rest(props, [\"clearfix\", \"pull\"]);\n    rest.className = classNames({\n        \"is-clearfix\": clearfix,\n        [`is-pulled-${pull}`]: pull,\n    }, rest.className);\n    return rest;\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);\n//# sourceMappingURL=float.js.map"]},"metadata":{},"sourceType":"module"}