{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n  backgroundColor: PropTypes.oneOf([...vars.colors, ...vars.shades]),\n  italic: PropTypes.bool,\n  textAlign: PropTypes.oneOf(vars.textAlignments),\n  textColor: PropTypes.oneOf([...vars.colors, ...vars.shades]),\n  textSize: PropTypes.oneOf(vars.textSizes),\n  textTransform: PropTypes.oneOf(vars.textTransforms),\n  textWeight: PropTypes.oneOf(vars.textWeights)\n}));\nexport const transform = props => {\n  const backgroundColor = props.backgroundColor,\n        italic = props.italic,\n        textAlign = props.textAlign,\n        textColor = props.textColor,\n        textSize = props.textSize,\n        textTransform = props.textTransform,\n        textWeight = props.textWeight,\n        rest = tslib_1.__rest(props, [\"backgroundColor\", \"italic\", \"textAlign\", \"textColor\", \"textSize\", \"textTransform\", \"textWeight\"]);\n\n  rest.className = classNames({\n    [`has-background-${backgroundColor}`]: backgroundColor,\n    [`has-text-${textColor}`]: textColor,\n    \"is-italic\": italic,\n    [`is-${textTransform}`]: textTransform,\n    [`has-text-${textAlign}`]: textAlign,\n    [`has-text-weight-${textWeight}`]: textWeight,\n    [`is-size-${textSize}`]: textSize\n  }, rest.className);\n  return rest;\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);","map":{"version":3,"sources":["../../../src/base/helpers/typography.ts"],"names":[],"mappings":";AAAA,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,SAAP,MAAsB,YAAtB;AAEA,SACE,oBADF,EAEE,8BAFF,QAIO,WAJP;AAkBA,OAAO,MAAM,aAAa,GAAG,oBAAoB,CAAC,IAAI,KAAK;AACzD,EAAA,eAAe,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,GAAG,IAAI,CAAC,MAAT,EAAiB,GAAG,IAAI,CAAC,MAAzB,CAAhB,CADwC;AAEzD,EAAA,MAAM,EAAE,SAAS,CAAC,IAFuC;AAGzD,EAAA,SAAS,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,cAArB,CAH8C;AAIzD,EAAA,SAAS,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,GAAG,IAAI,CAAC,MAAT,EAAiB,GAAG,IAAI,CAAC,MAAzB,CAAhB,CAJ8C;AAKzD,EAAA,QAAQ,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,SAArB,CAL+C;AAMzD,EAAA,aAAa,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,cAArB,CAN0C;AAOzD,EAAA,UAAU,EAAE,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,WAArB;AAP6C,CAAL,CAAL,CAA1C;AAUP,OAAO,MAAM,SAAS,GAA8C,KAAK,IAAG;AAAA,QAExE,eAFwE,GAUtE,KAVsE,CAExE,eAFwE;AAAA,QAGxE,MAHwE,GAUtE,KAVsE,CAGxE,MAHwE;AAAA,QAIxE,SAJwE,GAUtE,KAVsE,CAIxE,SAJwE;AAAA,QAKxE,SALwE,GAUtE,KAVsE,CAKxE,SALwE;AAAA,QAMxE,QANwE,GAUtE,KAVsE,CAMxE,QANwE;AAAA,QAOxE,aAPwE,GAUtE,KAVsE,CAOxE,aAPwE;AAAA,QAQxE,UARwE,GAUtE,KAVsE,CAQxE,UARwE;AAAA,QASxE,IATwE,GASxE,OAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,eAAA,EAAA,YAAA,CAAA,CATwE;;AAgBzE,EAAA,IAAY,CAAC,SAAb,GAAyB,UAAU,CAClC;AACE,KAAC,kBAAkB,eAAe,EAAlC,GAAuC,eADzC;AAEE,KAAC,YAAY,SAAS,EAAtB,GAA2B,SAF7B;AAGE,iBAAa,MAHf;AAIE,KAAC,MAAM,aAAa,EAApB,GAAyB,aAJ3B;AAKE,KAAC,YAAY,SAAS,EAAtB,GAA2B,SAL7B;AAME,KAAC,mBAAmB,UAAU,EAA9B,GAAmC,UANrC;AAOE,KAAC,WAAW,QAAQ,EAApB,GAAyB;AAP3B,GADkC,EAUjC,IAAY,CAAC,SAVoB,CAAnC;AAaD,SAAO,IAAP;AACD,CA9BM;AAgCP,OAAO,MAAM,uBAAuB,GAAG,8BAA8B,CACnE,aADmE,EAEnE,SAFmE,CAA9D","sourceRoot":"","sourcesContent":["import * as tslib_1 from \"tslib\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { makePropTypesFactory, makeValidatingTransformFactory, } from \"./factory\";\nexport const makePropTypes = makePropTypesFactory(vars => ({\n    backgroundColor: PropTypes.oneOf([...vars.colors, ...vars.shades]),\n    italic: PropTypes.bool,\n    textAlign: PropTypes.oneOf(vars.textAlignments),\n    textColor: PropTypes.oneOf([...vars.colors, ...vars.shades]),\n    textSize: PropTypes.oneOf(vars.textSizes),\n    textTransform: PropTypes.oneOf(vars.textTransforms),\n    textWeight: PropTypes.oneOf(vars.textWeights),\n}));\nexport const transform = props => {\n    const { backgroundColor, italic, textAlign, textColor, textSize, textTransform, textWeight } = props, rest = tslib_1.__rest(props, [\"backgroundColor\", \"italic\", \"textAlign\", \"textColor\", \"textSize\", \"textTransform\", \"textWeight\"]);\n    rest.className = classNames({\n        [`has-background-${backgroundColor}`]: backgroundColor,\n        [`has-text-${textColor}`]: textColor,\n        \"is-italic\": italic,\n        [`is-${textTransform}`]: textTransform,\n        [`has-text-${textAlign}`]: textAlign,\n        [`has-text-weight-${textWeight}`]: textWeight,\n        [`is-size-${textSize}`]: textSize,\n    }, rest.className);\n    return rest;\n};\nexport const makeValidatingTransform = makeValidatingTransformFactory(makePropTypes, transform);\n//# sourceMappingURL=typography.js.map"]},"metadata":{},"sourceType":"module"}