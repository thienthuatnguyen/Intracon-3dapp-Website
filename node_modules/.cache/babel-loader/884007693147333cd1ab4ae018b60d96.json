{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mac/Documents/Intracon-3dapp-Website/app/src/components/ToggleContentParent.js\";\n\n/* eslint-disable react/forbid-prop-types */\n\n/* eslint-disable sx-a11y/click-events-have-key-events */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Image from '../services/image';\nimport RowItem from './UI/ItemSideMenu/RowItem';\nimport Icon from './UI/ItemSideMenu/Icon';\nimport Text from './UI/ItemSideMenu/Text';\nimport NewItem from './UI/ItemSideMenu/NewItem';\n\nclass ToggleContentParent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      imageUrl: ''\n    });\n\n    _defineProperty(this, \"onItemClick\", id => {\n      const getData = this.props.getData;\n      getData(id, true, false);\n    });\n  }\n\n  componentDidMount() {\n    const imageId = this.props.imageId;\n\n    if (imageId) {\n      Image.getUrl(imageId).then(response => {\n        this.setState({\n          imageUrl: response.data\n        });\n      });\n    }\n  }\n\n  render(props) {\n    const imageUrl = this.state.imageUrl;\n    const _this$props = this.props,\n          viewed = _this$props.viewed,\n          keyId = _this$props.keyId,\n          id = _this$props.id,\n          icon = _this$props.icon,\n          title = _this$props.title;\n    return React.createElement(RowItem, {\n      id: id,\n      className: id == keyId ? 'active row-item' : 'row-item',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      onClick: () => {\n        this.onItemClick(id);\n      },\n      className: \"icon-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, icon && this.getIcon(icon), imageUrl && React.createElement(\"img\", {\n      src: imageUrl,\n      alt: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(Text, {\n      onClick: () => {\n        this.onItemClick(id);\n      },\n      className: \"txt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, title), !viewed && React.createElement(NewItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nToggleContentParent.propTypes = {\n  keyId: PropTypes.any,\n  getData: PropTypes.func,\n  closeOutSide: PropTypes.any,\n  id: PropTypes.any,\n  title: PropTypes.string,\n  children: PropTypes.any,\n  icon: PropTypes.any,\n  imageId: PropTypes.any,\n  viewed: PropTypes.bool\n};\nexport default ToggleContentParent;","map":{"version":3,"sources":["/Users/mac/Documents/Intracon-3dapp-Website/app/src/components/ToggleContentParent.js"],"names":["React","Component","PropTypes","Image","RowItem","Icon","Text","NewItem","ToggleContentParent","imageUrl","id","getData","props","componentDidMount","imageId","getUrl","then","response","setState","data","render","state","viewed","keyId","icon","title","onItemClick","getIcon","propTypes","any","func","closeOutSide","string","children","bool"],"mappings":"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","sourcesContent":["/* eslint-disable react/forbid-prop-types */\n/* eslint-disable sx-a11y/click-events-have-key-events */\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Image from '../services/image'\nimport RowItem from './UI/ItemSideMenu/RowItem'\nimport Icon from './UI/ItemSideMenu/Icon'\nimport Text from './UI/ItemSideMenu/Text'\nimport NewItem from './UI/ItemSideMenu/NewItem'\n\n\nclass ToggleContentParent extends Component {\n\n  state = {\n    imageUrl: ''\n  }\n\n  componentDidMount() {\n    const { imageId } = this.props\n    if (imageId) {\n      Image.getUrl(imageId).then(response => {\n        this.setState({ imageUrl: response.data })\n      })\n    }\n  }\n\n  onItemClick = (id) => {\n    const { getData } = this.props\n    getData(id, true, false)\n  }\n\n  render(props) {\n    const { imageUrl } = this.state\n    const { viewed, keyId, id, icon, title } = this.props\n      return (\n        <RowItem id={id} className={(id == keyId ) ? 'active row-item' : 'row-item'}>\n          <Icon onClick={() => { this.onItemClick(id) }} className='icon-menu'>\n            { icon && this.getIcon(icon) }\n            { imageUrl && <img src={imageUrl} alt='icon' /> }  \n          </Icon>\n          <Text onClick={() => { this.onItemClick(id) }} className='txt'>{ title }</Text>\n          { !viewed && <NewItem /> }\n        </RowItem>\n      )\n  }\n}\n\nToggleContentParent.propTypes = {\n  keyId: PropTypes.any,\n  getData: PropTypes.func,\n  closeOutSide: PropTypes.any,\n  id: PropTypes.any,\n  title: PropTypes.string,\n  children: PropTypes.any,\n  icon: PropTypes.any,\n  imageId: PropTypes.any,\n  viewed: PropTypes.bool\n}\n\nexport default ToggleContentParent"]},"metadata":{},"sourceType":"module"}