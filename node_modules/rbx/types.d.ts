export declare type Lit = string | number | boolean | undefined | null | void | {};
export declare type Omit<T, K> = Pick<T, Exclude<keyof T, K>>;
export declare type Prefer<P, T> = P & Omit<T, keyof P>;
export declare type ReturnType<T> = T extends (...args: any[]) => infer R ? R : any;
